name: CI Pipeline

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Lint YAML
        uses: ibiqlik/action-yamllint@v3
        with:
          file_or_dir: ".github/workflows/"
          strict: true
          config_data: |
            extends: default
            rules:
              line-length: disable
              truthy: disable
              document-start: disable

  sca-backend:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
      - name: Install dependencies
        run: npm install
        working-directory: student-management-service
      - name: Run npm audit
        run: npm audit --audit-level=moderate || true
        working-directory: student-management-service

  sast-backend:
    runs-on: ubuntu-latest
    needs: sca-backend
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
      - name: Install dependencies
        run: npm install
        working-directory: student-management-service
      - name: Run ESLint
        run: npx eslint . || true
        working-directory: student-management-service

  tests-backend:
    runs-on: ubuntu-latest
    needs: sast-backend
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
      - name: Install dependencies
        run: npm install
        working-directory: student-management-service
      - name: Run Jest tests
        run: npm test || echo "No tests found, skipping..."
        working-directory: student-management-service

  sca-frontend:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v3
      - name: Run basic security scan
        run: |
          echo "No composer.json found, skipping Composer Audit"
          find . -name "*.php" -exec grep -H "eval(" {} \; || true
        working-directory: student-frontend

  sast-frontend:
    runs-on: ubuntu-latest
    needs: sca-frontend
    steps:
      - uses: actions/checkout@v3
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"
      - name: PHP Syntax Check
        run: |
          find . -name "*.php" -exec php -l {} \;
        working-directory: student-frontend

  tests-frontend:
    runs-on: ubuntu-latest
    needs: sast-frontend
    steps:
      - uses: actions/checkout@v3
      - name: Run basic PHP tests
        run: |
          echo "No PHPUnit found, running syntax checks instead"
          find . -name "*.php" -exec php -l {} \;
        working-directory: student-frontend

  build:
    runs-on: ubuntu-latest
    needs: [tests-backend, tests-frontend]
    steps:
      - uses: actions/checkout@v3
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build & Push Backend
        run: |
          docker build -t docker.io/${{ secrets.DOCKERHUB_USERNAME }}/management-backend:${{ github.sha }} \
            -f student-management-service/Dockerfile student-management-service
          docker push docker.io/${{ secrets.DOCKERHUB_USERNAME }}/management-backend:${{ github.sha }}
      - name: Build & Push Frontend
        run: |
          docker build -t docker.io/${{ secrets.DOCKERHUB_USERNAME }}/management-frontend:${{ github.sha }} \
            -f student-frontend/Dockerfile student-frontend
          docker push docker.io/${{ secrets.DOCKERHUB_USERNAME }}/management-frontend:${{ github.sha }}
